{"version":3,"file":"ItemsList.js","sources":["../../../src/components/items-picker/ItemsList.tsx"],"sourcesContent":["import React from \"react\"\r\nimport { T } from \"../../conf/i18n\"\r\nimport { Empty, ItemsPickerAction } from \"../../components\"\r\nimport Item from \"./Item\"\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\"\r\nimport { makeStyles } from \"@material-ui/core\"\r\nimport { ClassNameMap } from \"@material-ui/core/styles/withStyles\"\r\nimport { Theme } from \"@material-ui/core/styles\"\r\n\r\ninterface ItemsListProps<T> {\r\n  items: Array<T>\r\n  toggleItem: any\r\n  action: ItemsPickerAction\r\n  renderItem: (item: T) => JSX.Element\r\n}\r\n\r\nconst useStyles: (props?: any) => ClassNameMap<any> = makeStyles((theme: Theme) => ({\r\n  enter : {\r\n    opacity : 0\r\n  },\r\n  enterActive : {\r\n    opacity    : 1,\r\n    transition : theme.transitions.create(\"opacity\", { duration: theme.transitions.duration.standard })\r\n  },\r\n  exit : {\r\n    opacity : 1\r\n  },\r\n  exitActive : {\r\n    opacity    : 0,\r\n    transition : theme.transitions.create(\"opacity\", { duration: theme.transitions.duration.standard })\r\n  }\r\n}))\r\n\r\nconst ItemsList = <A extends { id?: string } >({ items, action, toggleItem, renderItem }: ItemsListProps<A>): JSX.Element => {\r\n  const classes: ClassNameMap<any> = useStyles()\r\n\r\n  if (items.length > 0) {\r\n    return (\r\n      <React.Fragment>\r\n        <TransitionGroup>\r\n          {items.map((item: A) => (\r\n            <CSSTransition\r\n              key={item.id}\r\n              timeout={500}\r\n              classNames={{\r\n                enter       : classes.enter,\r\n                enterActive : classes.enterActive,\r\n                exit        : classes.exit,\r\n                exitActive  : classes.exitActive\r\n              }}\r\n            >\r\n              <Item\r\n                key={item.id}\r\n                item={item}\r\n                action={action}\r\n                toggleItem={toggleItem}\r\n                renderItem={renderItem}\r\n              />\r\n            </CSSTransition>\r\n          ))}\r\n        </TransitionGroup>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n  return <Empty message={T.items_pickers.empty} />\r\n}\r\n\r\nexport default ItemsList\r\n"],"names":["React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,IAAM,SAAS,GAAuC,UAAU,CAAC,UAAC,KAAY,IAAK,QAAC;IAClF,KAAK,EAAG;QACN,OAAO,EAAG,CAAC;KACZ;IACD,WAAW,EAAG;QACZ,OAAO,EAAM,CAAC;QACd,UAAU,EAAG,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,QAAQ,EAAE,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;KACpG;IACD,IAAI,EAAG;QACL,OAAO,EAAG,CAAC;KACZ;IACD,UAAU,EAAG;QACX,OAAO,EAAM,CAAC;QACd,UAAU,EAAG,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,QAAQ,EAAE,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;KACpG;CACF,IAAC,CAAC,CAAA;IAEG,SAAS,GAAG,UAA6B,EAA4D;QAA1D,KAAK,WAAA,EAAE,MAAM,YAAA,EAAE,UAAU,gBAAA,EAAE,UAAU,gBAAA;IACpF,IAAM,OAAO,GAAsB,SAAS,EAAE,CAAA;IAE9C,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;QACpB,QACEA,6BAACA,cAAK,CAAC,QAAQ;YACbA,6BAAC,eAAe,QACb,KAAK,CAAC,GAAG,CAAC,UAAC,IAAO,IAAK,QACtBA,6BAAC,aAAa,IACZ,GAAG,EAAE,IAAI,CAAC,EAAE,EACZ,OAAO,EAAE,GAAG,EACZ,UAAU,EAAE;oBACV,KAAK,EAAS,OAAO,CAAC,KAAK;oBAC3B,WAAW,EAAG,OAAO,CAAC,WAAW;oBACjC,IAAI,EAAU,OAAO,CAAC,IAAI;oBAC1B,UAAU,EAAI,OAAO,CAAC,UAAU;iBACjC;gBAEDA,6BAAC,IAAI,IACH,GAAG,EAAE,IAAI,CAAC,EAAE,EACZ,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,MAAM,EACd,UAAU,EAAE,UAAU,EACtB,UAAU,EAAE,UAAU,GACtB,CACY,IACjB,CAAC,CACc,CACH,EAClB;KACF;IACD,OAAOA,6BAAC,KAAK,IAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC,KAAK,GAAI,CAAA;AAClD;;;;"}