{"version":3,"file":"DatatableBody.js","sources":["../../../src/components/datatable/DatatableBody.tsx"],"sourcesContent":["import React, { SyntheticEvent, useState } from \"react\"\r\nimport { TableCell, TableRow, TableBody, Checkbox, Icon, Typography, Fade } from \"@material-ui/core\"\r\nimport { FormattedAmount, FormattedBoolean, FormattedDate, FormattedDateTime, FormattedNumber, FormattedGender, FormattedLegalType } from \"../formatters\"\r\nimport { IconBtn } from \"../buttons\"\r\nimport { KeyboardArrowDown, KeyboardArrowUp } from \"@material-ui/icons\"\r\nimport { T } from \"../../conf/i18n\"\r\nimport { useBodyStyles } from \"./styles/bodyStyles\"\r\nimport { Column } from \"./models/models\"\r\nimport { SearchResult } from \"../../models/SearchModel\"\r\nimport { computeEmptyCellColSpan, isRowSelected } from \"./helpers/helpers\"\r\nimport { ClassNameMap } from \"@material-ui/core/styles/withStyles\"\r\nimport { ReactState } from \"../types\"\r\n\r\nconst EmptyRow = (props: { colSpan: number }) => {\r\n  const classes: ClassNameMap<any> = useBodyStyles()\r\n\r\n  return (\r\n    <TableBody>\r\n      <TableRow>\r\n        <TableCell align={\"center\"} colSpan={props.colSpan}>\r\n          <div>\r\n            <Icon color={\"disabled\"} className={classes.emptyCellIcon}>block</Icon>\r\n          </div>\r\n          <Typography variant={\"caption\"}>{T.datatable.empty}</Typography>\r\n        </TableCell>\r\n      </TableRow>\r\n    </TableBody>\r\n  )\r\n}\r\n\r\nconst buildCell = <C extends { id?: string }>(row_value: any, type_of: string, row: C, index: number): JSX.Element => {\r\n  const cell_id: string = `${row.id}--${index}`\r\n  switch (type_of) {\r\n  case \"number\":\r\n    return <TableCell key={cell_id}><FormattedNumber value={row_value} /></TableCell>\r\n  case \"currency\":\r\n    return <TableCell key={cell_id}><FormattedAmount value={row_value} row={row} variant=\"currency\" /></TableCell>\r\n  case \"currency-standard\":\r\n    return <TableCell key={cell_id}><FormattedAmount value={row_value} row={row} variant=\"currency-standard\" /></TableCell>\r\n  case \"percentage\":\r\n    return <TableCell key={cell_id}><FormattedAmount value={row_value} row={row} variant=\"percent\" /></TableCell>\r\n  case \"boolean\":\r\n    return <TableCell key={cell_id}><FormattedBoolean value={row_value} /></TableCell>\r\n  case \"date\":\r\n    return <TableCell key={cell_id}><FormattedDate value={row_value} /></TableCell>\r\n  case \"datetime\":\r\n    return <TableCell key={cell_id}><FormattedDateTime value={row_value} /></TableCell>\r\n  case \"gender\":\r\n    return <TableCell key={cell_id}><FormattedGender value={row_value} /></TableCell>\r\n  case \"legalType\":\r\n    return <TableCell key={cell_id}><FormattedLegalType value={row_value} /></TableCell>\r\n  default:\r\n    return <TableCell key={cell_id} scope=\"row\">{row_value}</TableCell>\r\n  }\r\n}\r\n\r\nconst buildRow = <B, >(row: B, columns: Array<Column<B>>, columnsVisibility: any): Array<any> => {\r\n  const result: Array<any> = []\r\n  columns.map((col: Column<B>, index: number) => {\r\n    const formatter: (cell: string, row: B) => any = col.formatter ? col.formatter : (c: string) => c\r\n    const value_formatted: any = formatter(row[col.field_name], row)\r\n    const row_value: any = value_formatted !== undefined ? value_formatted : T.global.nc\r\n    const type_of: string = col.type ? col.type : (typeof row_value)\r\n    if (!!columnsVisibility[col.field_name]) {\r\n      result.push(buildCell<B>(row_value, type_of, row, index))\r\n    }\r\n  })\r\n  return result\r\n}\r\n\r\ninterface DatatableBodyProps<T> {\r\n  columns: Array<Column<T>>\r\n  columnsVisibility: any\r\n  loading: boolean\r\n  searchResult: SearchResult<T>\r\n  selectedRows: Array<T>\r\n  onToggleSelect: (row: T) => (e: SyntheticEvent) => void\r\n  cellActions: (row: T) => JSX.Element\r\n  hasLocalActions: boolean\r\n  hasMultipleActions: boolean\r\n  displayLocalActions: boolean\r\n  expandedRow: (row: T) => JSX.Element\r\n}\r\n\r\nconst DatatableBody = <A extends { id?: string }>(props: DatatableBodyProps<A>): JSX.Element => {\r\n\r\n  const { columns, columnsVisibility, loading, searchResult, selectedRows, onToggleSelect, cellActions,\r\n    hasLocalActions, hasMultipleActions, displayLocalActions, expandedRow }: DatatableBodyProps<A> = props\r\n\r\n  const [ rowExpanded, setRowExpanded ]: ReactState<Array<string>> = useState<Array<string>>([])\r\n  const classes: ClassNameMap<any> = useBodyStyles()\r\n\r\n  const toggleExpand = (rowId: string) => (): void => {\r\n    if (rowExpanded.includes(rowId)) {\r\n      setRowExpanded([ ...rowExpanded.filter((r: string) => r !== rowId) ])\r\n    } else {\r\n      setRowExpanded([ rowId, ...rowExpanded ])\r\n    }\r\n  }\r\n\r\n  if (searchResult.data && searchResult.data.length === 0 && !loading) {\r\n    const colSpan: number = computeEmptyCellColSpan(columns, hasMultipleActions, expandedRow, hasLocalActions)\r\n    return (\r\n      <EmptyRow colSpan={colSpan} />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <TableBody>\r\n      {searchResult.data.map((row: A) => {\r\n        const isSelected: boolean = selectedRows ? isRowSelected(row.id, selectedRows) : false\r\n        const isExpanded: boolean = rowExpanded.includes(row.id)\r\n        return (\r\n          <React.Fragment key={row.id}>\r\n            <TableRow\r\n              hover\r\n              role=\"checkbox\"\r\n              tabIndex={-1}\r\n              selected={isSelected}\r\n              className={classes.tableRow}\r\n              classes={{ root: classes.root }}\r\n            >\r\n              {hasMultipleActions &&\r\n              <TableCell className={classes.checkboxCell}>\r\n                <Checkbox checked={isSelected} onClick={onToggleSelect(row)} />\r\n              </TableCell>\r\n              }\r\n              {expandedRow &&\r\n              <TableCell className={classes.expandedCell}>\r\n                <IconBtn\r\n                  onClick={toggleExpand(row.id)}\r\n                >\r\n                  {isExpanded ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\r\n                </IconBtn>\r\n              </TableCell>\r\n              }\r\n              {buildRow(row, columns, columnsVisibility)}\r\n              {displayLocalActions &&\r\n                <Fade in={displayLocalActions}>\r\n                  <TableCell className={classes.actionCell}>\r\n                    {cellActions(row)}\r\n                  </TableCell>\r\n                </Fade>\r\n              }\r\n            </TableRow>\r\n            {isExpanded &&\r\n            <Fade in={isExpanded}>\r\n              <TableRow\r\n                key={`expanded-row-${row.id}`}\r\n                hover\r\n              >\r\n                <TableCell style={{ textAlign: \"left\" }} colSpan={100}>\r\n                  {expandedRow(row)}\r\n                </TableCell>\r\n              </TableRow>\r\n            </Fade>\r\n            }\r\n          </React.Fragment>\r\n        )\r\n      })}\r\n    </TableBody>\r\n  )\r\n}\r\n\r\nexport default DatatableBody\r\n"],"names":["React"],"mappings":"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"}