{"version":3,"file":"FormattedLegalType.js","sources":["../../../src/components/formatters/FormattedLegalType.tsx"],"sourcesContent":["import React  from \"react\"\r\nimport { T } from \"../../conf/i18n\"\r\nimport { RelativeType } from \"../../models/User\"\r\n\r\ninterface FormattedLegalTypeProps {\r\n  value: RelativeType\r\n}\r\n\r\nexport const FormattedLegalType = ({ value }: FormattedLegalTypeProps): JSX.Element => {\r\n  if (value === \"CONJOINT\") {\r\n    return <React.Fragment>{T.user.cosuscriber.type.CONJOINT}</React.Fragment>\r\n  } else if (value === \"USUFRUCTUARY\") {\r\n    return <React.Fragment>{T.user.cosuscriber.type.USUFRUCTUARY}</React.Fragment>\r\n  } else {\r\n    return <React.Fragment>{T.global.nc}</React.Fragment>\r\n  }\r\n}\r\n"],"names":["React"],"mappings":";;;IAQa,kBAAkB,GAAG,UAAC,EAAkC;QAAhC,KAAK,WAAA;IACxC,IAAI,KAAK,KAAK,UAAU,EAAE;QACxB,OAAOA,6BAACA,cAAK,CAAC,QAAQ,QAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAkB,CAAA;KAC3E;SAAM,IAAI,KAAK,KAAK,cAAc,EAAE;QACnC,OAAOA,6BAACA,cAAK,CAAC,QAAQ,QAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAkB,CAAA;KAC/E;SAAM;QACL,OAAOA,6BAACA,cAAK,CAAC,QAAQ,QAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAkB,CAAA;KACtD;AACH;;;;"}