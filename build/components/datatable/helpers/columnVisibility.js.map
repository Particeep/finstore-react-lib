{"version":3,"file":"columnVisibility.js","sources":["../../../../src/components/datatable/helpers/columnVisibility.ts"],"sourcesContent":["import update from \"immutability-helper\"\r\nimport { Column, ColumnVisibilityData } from \"../models/models\"\r\nimport { IObject } from \"../../types\"\r\n\r\nconst CONSUMER_TABLES: Array<string> = [\r\n  \"partnersOnEntity\", \"PartnerCommissions\", \"webhooks\", \"transactionsWallet\", \"users\",\r\n  \"UserRelatives\", \"transactionsBis\", \"transactionsSignatures\", \"subadmins\", \"financialProducts\",\r\n  \"signaturesSimple\", \"signaturesMultiple\", \"partners\", \"news\", \"partnersWaiting\", \"partnerUsers\",\r\n  \"transactions\", \"partnerProjects\", \"fundraises\", \"succeededScheduler\", \"repaymentDetails\",\r\n  \"classicScheduler\", \"fundraiseDocuments\", \"manageMembers\", \"appEnterprises\", \"documents\", \"funds\",\r\n  \"fundsInvestDocs\", \"fundsDealDocs\", \"groupUsers\"\r\n]\r\n\r\nconst storageKey = (consumerKey: string): string => `config-${consumerKey}`\r\n\r\nexport const buildLocalConfig = (consumerKey: string, connectedUserId: string): void => {\r\n  if (!isExistLocalConfig(consumerKey, connectedUserId)) {\r\n    buildLocalConfigTable(consumerKey, connectedUserId, CONSUMER_TABLES)\r\n  }\r\n}\r\n\r\nconst isExistLocalConfig = (consumerKey: string, connectedUserId: string): boolean => {\r\n  const storage: IObject = JSON.parse(localStorage.getItem(storageKey(consumerKey)))\r\n  return !!storage && !!storage[connectedUserId]\r\n}\r\n\r\nconst buildLocalConfigTable = (consumerKey: string, connectedUserId: string, tables: Array<string>): void => {\r\n  const configTables: IObject = tables.reduce((acc: IObject, cur: string) => ({ ...acc, [cur]: { VISIBILITY: null } }), {})\r\n  const initialColumnVisibility: ColumnVisibilityData = { [connectedUserId]: { tables: configTables } } as ColumnVisibilityData\r\n  localStorage.setItem(storageKey(consumerKey), JSON.stringify(initialColumnVisibility))\r\n}\r\n\r\nexport interface ColumnsVisibilityMap {\r\n  [key: string]: boolean\r\n}\r\n\r\nexport const initColumnsVisibilityWithLocalStorage = <T>(tableName:string, columns: Array<Column<T>>, consumerKey: string, userId: string): ColumnsVisibilityMap => {\r\n  const mapColumnsVisibility: ColumnsVisibilityMap = columns.reduce((acc: ColumnsVisibilityMap, cur: Column<T>) => ({ ...acc, [cur.field_name]: cur.visible }), {})\r\n  if (consumerKey && userId) {\r\n    const defaultHidden: Array<string> = getColumnNameVisible(mapColumnsVisibility)\r\n    const localVisibility: any = getStorageConfigTable(consumerKey, userId, tableName, \"VISIBILITY\")\r\n    if (!!localVisibility && localVisibility.length > 0) {\r\n      Object.keys(mapColumnsVisibility).map((key: string) => mapColumnsVisibility[key] = localVisibility.includes(key))\r\n    } else {\r\n      updateStorageConfigTable(consumerKey, userId, tableName, \"VISIBILITY\", defaultHidden)\r\n    }\r\n  }\r\n  return mapColumnsVisibility\r\n}\r\n\r\nexport const getColumnNameVisible = (columnsVisibility: ColumnsVisibilityMap): Array<string> => {\r\n  return Object.keys(columnsVisibility).filter((key: string) => columnsVisibility[key])\r\n}\r\n\r\nexport const getStorageConfigTable = (consumerKey: string, connectedUserId: string, tableName: string, configName: string) => {\r\n  try {\r\n    const storage: any = JSON.parse(localStorage.getItem(storageKey(consumerKey)))\r\n    return configName ? storage[connectedUserId].tables[tableName][configName] : storage[connectedUserId].tables[tableName]\r\n  } catch (err) {\r\n    console.error(err)\r\n    return void(0)\r\n  }\r\n}\r\n\r\nexport const updateStorageConfigTable = (consumerKey: string, connectedUserId: string, tableName: string, type: string, values: Array<string>): void => {\r\n  try {\r\n    const configName: string = storageKey(consumerKey)\r\n    const storage: any = JSON.parse(localStorage.getItem(configName))\r\n    if (storage && storage[connectedUserId]) {\r\n      const newObject: IObject = update(storage, {\r\n        [connectedUserId] : {\r\n          tables : {\r\n            [tableName] : {\r\n              [type] : { $set: values }\r\n            }\r\n          }\r\n        }\r\n      })\r\n      localStorage.setItem(configName, JSON.stringify(newObject))\r\n    }\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}